service: backend
frameworkVersion: '3'

package:
  individually: true

plugins:
  - serverless-wsgi
  - serverless-python-requirements
  - serverless-websockets-plugin

custom:
  lobbyTableName: 'lobby-table-${self:provider.stage}'
  boardTableName:  'board-table-${self:provider.stage}'
  gameTableName:  'game-table-${self:provider.stage}'
  detectiveLogTableName: 'detective-log-table-${self:provider.stage}'
  activeGamesTableName: 'active-games-table-${self:provider.stage}'
  chatHistoryTableName: 'chat-history-table-${self:provider.stage}'
  pythonRequirements:
    slim: true
    strip: false

provider:
  name: aws
  runtime: python3.9
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "*"
          Resource:
            - "*"

  environment:
    LOBBY_TABLE: ${self:custom.lobbyTableName}
    BOARD_TABLE: ${self:custom.boardTableName}
    GAME_TABLE: ${self:custom.gameTableName}
    DETECTIVE_LOG_TABLE: ${self:custom.detectiveLogTableName}
    ACTIVE_GAMES_TABLE: ${self:custom.activeGamesTableName}
    CHAT_HISTORY_TABLE: ${self:custom.chatHistoryTableName}

functions:
  app:
    package:
      patterns:
        - 'src/**'
        - '!requirements.txt'
        - '!package.json'
        - '!package-lock.json'
        - '!.serverless/**'
        - '!venv/**'
        - '!node_modules/**'
    handler: main.handler
    events:
      - httpApi: '*'


resources:
  Resources:
    LobbyTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.lobbyTableName}
    BoardTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: gameId
            AttributeType: S
        KeySchema:
          - AttributeName: gameId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.boardTableName}
    GameTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.gameTableName}
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: gameId
            AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: GameIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: gameId
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
        BillingMode: PAY_PER_REQUEST
    DetectiveLogTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: gameId
            AttributeType: S
        KeySchema:
          - AttributeName: gameId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.detectiveLogTableName}
    ActiveGamesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: gameId
            AttributeType: S
        KeySchema:
          - AttributeName: gameId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.activeGamesTableName}
    ChatHistoryTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.chatHistoryTableName}
